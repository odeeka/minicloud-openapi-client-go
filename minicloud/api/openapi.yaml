openapi: 3.0.1
info:
  contact: {}
  description: Simulated VM management API built with Go and Docker
  title: MiniCloud REST API
  version: "1.0"
servers:
- url: //localhost:8080/
paths:
  /account/all:
    get:
      description: Retrieves all registered user accounts
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/models.Account"
                type: array
          description: OK
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      summary: List all accounts
      tags:
      - account
  /accounts/login:
    post:
      description: Login with username and password to receive JWT token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.Account"
        description: Account login credentials
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Returns JWT token and account info
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      summary: Authenticate an account
      tags:
      - account
      x-codegen-request-body-name: credentials
  /accounts/register:
    post:
      description: Create a new user account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.Account"
        description: Account registration payload
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Created
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      summary: Register a new account
      tags:
      - account
      x-codegen-request-body-name: account
  /public:
    get:
      description: Responds with a simple ping response to verify that the public
        endpoint is reachable.
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
      summary: Show public API status
      tags:
      - public
  /public/ping:
    get:
      description: Responds with a simple ping response to verify that the public
        endpoint is reachable.
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
      summary: Show public API status
      tags:
      - public
  /storages:
    get:
      description: Retrieves a list of all storage volumes from the database.
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: List all storages
      tags:
      - storages
    post:
      description: Creates and starts a new storage container and stores its metadata.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.Storage"
        description: Storage object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Created
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Create a new storage volume
      tags:
      - storages
      x-codegen-request-body-name: storage
  /storages/{id}:
    delete:
      description: Deletes a specific storage volume using its ID.
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
        "400":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "500":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete storage by ID
      tags:
      - storages
    get:
      description: Fetches a storage volume by its ID.
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get storage by ID
      tags:
      - storages
    put:
      description: Updates the size of an existing storage volume.
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.Storage"
        description: Updated storage data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update storage size
      tags:
      - storages
      x-codegen-request-body-name: storage
  /storages/{id}/attach/{vmid}:
    post:
      description: Attaches a storage volume to a specific virtual machine.
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: VM ID
        in: path
        name: vmid
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Not Found
        "500":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Attach storage to VM
      tags:
      - storages
  /storages/{id}/detach/{vmid}:
    post:
      description: Detaches a storage volume from a specific virtual machine.
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      - description: VM ID
        in: path
        name: vmid
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "404":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Not Found
        "500":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Detach storage from VM
      tags:
      - storages
  /vms:
    get:
      description: Retrieves a list of all virtual machines
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: List all VMs
      tags:
      - vms
    post:
      description: Creates and stores metadata for a new virtual machine simulation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.VM"
        description: VM to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Created
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      summary: Create a new VM
      tags:
      - vms
      x-codegen-request-body-name: vm
  /vms/{id}:
    delete:
      description: Deletes a VM and removes its associated container
      parameters:
      - description: VM ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      summary: Delete VM
      tags:
      - vms
    get:
      description: Retrieves a single virtual machine by its ID
      parameters:
      - description: VM ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      summary: Get VM by ID
      tags:
      - vms
    put:
      description: Updates VM metadata or restarts container if necessary
      parameters:
      - description: VM ID
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/models.VM"
        description: Updated VM
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal Server Error
      summary: Update VM
      tags:
      - vms
      x-codegen-request-body-name: vm
components:
  schemas:
    models.Account:
      example:
        password: password
        id: 0
        username: username
      properties:
        id:
          description: Unique identifier
          type: integer
        password:
          description: "Password (stored hashed, omit in response)"
          type: string
        username:
          description: Username for login
          type: string
      type: object
    models.Storage:
      description: "A storage volume that can optionally be attached to a VM. Includes\
        \ attributes like size, name, container ID and optional VM binding."
      properties:
        container_id:
          description: The ID of the container that simulates the volume
          type: string
        id:
          description: The unique ID of the storage volume (autoincrement from DB)
          type: integer
        name:
          description: The name of the storage volume (autogenerated if not provided)
          type: string
        size_gb:
          description: The size of the volume in gigabytes
          type: integer
        vm_id:
          description: The ID of the attached virtual machine (nullable)
          type: integer
      type: object
    models.VM:
      properties:
        container_id:
          description: |-
            ContainerID is the Docker container ID simulating the VM.
            required: false
          type: string
        cpu:
          description: |-
            CPU represents the number of virtual CPUs allocated to the VM.
            example: 1.5
          type: number
        env:
          additionalProperties:
            type: string
          description: |-
            Env contains environment variables passed to the container.
            example: {"ENV": "dev"}
          type: object
        id:
          description: |-
            ID is the unique identifier of the virtual machine.
            required: true
          type: integer
        image:
          description: |-
            Image used to start the virtual machine (e.g., "nginx", "ubuntu").
            required: true
          type: string
        memory:
          description: |-
            Memory in megabytes allocated to the VM.
            example: 1024
          type: integer
        name:
          description: |-
            Name of the virtual machine.
            required: true
          type: string
        ports:
          description: |-
            Ports to expose on the container (e.g., [80, 443]).
            example: [80, 443]
          items:
            type: integer
          type: array
      type: object
  securitySchemes:
    BearerAuth:
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
